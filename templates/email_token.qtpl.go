// This file is automatically generated by qtc from "email_token.qtpl".
// See https://github.com/valyala/quicktemplate for details.

//line email_token.qtpl:1
package templates

//line email_token.qtpl:1
import (
	qtio422016 "io"

	qt422016 "github.com/valyala/quicktemplate"
)

//line email_token.qtpl:1
var (
	_ = qtio422016.Copy
	_ = qt422016.AcquireByteBuffer
)

//line email_token.qtpl:1
func StreamTokenEmail(qw422016 *qt422016.Writer, data EmailData) {
	//line email_token.qtpl:1
	qw422016.N().S(`
<p>Thank you for enabling your Glip bot.</p>

<p>Here is your token:</p>

<p>`)
	//line email_token.qtpl:6
	qw422016.E().S(data.Token.AccessToken)
	//line email_token.qtpl:6
	qw422016.N().S(`</p>

<p>Continue your development with the resources at the <a href="https://developer.ringcentral.com">RingCentral and Glip Developer Portal</a>.</p>

<p><a href="https://glip.com">Glipbot</a> <a href="https://glipbot-tokenizer.herokuapp.com">Tokenizer</a> by <a href="https://github.com/grokify">grokify</a></p>
`)
//line email_token.qtpl:11
}

//line email_token.qtpl:11
func WriteTokenEmail(qq422016 qtio422016.Writer, data EmailData) {
	//line email_token.qtpl:11
	qw422016 := qt422016.AcquireWriter(qq422016)
	//line email_token.qtpl:11
	StreamTokenEmail(qw422016, data)
	//line email_token.qtpl:11
	qt422016.ReleaseWriter(qw422016)
//line email_token.qtpl:11
}

//line email_token.qtpl:11
func TokenEmail(data EmailData) string {
	//line email_token.qtpl:11
	qb422016 := qt422016.AcquireByteBuffer()
	//line email_token.qtpl:11
	WriteTokenEmail(qb422016, data)
	//line email_token.qtpl:11
	qs422016 := string(qb422016.B)
	//line email_token.qtpl:11
	qt422016.ReleaseByteBuffer(qb422016)
	//line email_token.qtpl:11
	return qs422016
//line email_token.qtpl:11
}
