// This file is automatically generated by qtc from "home.qtpl".
// See https://github.com/valyala/quicktemplate for details.

//line home.qtpl:1
package templates

//line home.qtpl:1
import (
	qtio422016 "io"

	qt422016 "github.com/valyala/quicktemplate"
)

//line home.qtpl:1
var (
	_ = qtio422016.Copy
	_ = qt422016.AcquireByteBuffer
)

//line home.qtpl:1
func StreamHomePage(qw422016 *qt422016.Writer, data HomeData) {
	//line home.qtpl:1
	qw422016.N().S(`<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Glipbot Tokenizer</title>
  </head>
  <style>
    h1, h2, p, select {font-family: Arial, Helvetica, sans-serif;}
    .code {font-family: monospace;background-color:#efefef;border:1px solid #aaa;width:90%;height:5em;padding:0.3em;}
    .fixed {font-family: monospace;background-color:#efefef;border:1px solid #aaa;width:90%;height:1em;padding:0.3em;color:#800000;border-radius:3px;}
  </style>
  <script type="text/javascript">

// https://stackoverflow.com/questions/4907843/open-a-url-in-a-new-tab-and-not-a-new-window-using-javascript
function buildRedirectUrl() {
  var baseUrl = '`)
	//line home.qtpl:17
	qw422016.E().S(data.AppServerUrl)
	//line home.qtpl:17
	qw422016.N().S(`';

  var url = baseUrl + '/oauth2callback/' + document.getElementById('environment').value;

  var clientId = encodeURIComponent(document.getElementById("clientId").value);
  var clientSecret = encodeURIComponent(document.getElementById("clientSecret").value);
  var email = encodeURIComponent(document.getElementById("email").value);

  var queryString = '?clientId=' + clientId + '&clientSecret=' + clientSecret + '&email=' + email;

  return url + queryString
}

function buildAndShowRedirectUrl() {
  var redirectUrl = buildRedirectUrl();
  var span = document.getElementById('redirectUrl');

  while( span.firstChild ) {
    span.removeChild( span.firstChild );
  }
  span.appendChild( document.createTextNode(redirectUrl) );
}

  </script>
  <body>
    <h1>Glip Bot Tokenizer</h1>
    <p><a href="https://glipbot-tokenizer.herokuapp.com">https://glipbot-tokenizer.herokuapp.com</a></p>

    <p>Easily get your private Glip bot access token without OAuth.</p>

    <p>Code for this project is available here: <a href="https://github.com/grokify/glipbot-tokenizer">grokify/glipbot-tokenizer</a></p>

    <h2>Prerequisites</h2>

    <p>Create an app in the RingCentral Developer Portal (<a href="https://developer.ringcentral.com">https://developer.ringcentral.com</a>)</p>
    <p>Select Platform Type: <span class="fixed">Server/Bot</span></p>
    <p>Select your desired permissions: <span class="fixed">Glip</span>, <span class="fixed">Webhook Subscriptions</span>, <span class="fixed">Edit Extensions</span></p>

    <h2>Step 1) Add Redirect URL</h2>

    <p>Use the following to create a redirect URL and add it to your app in the Developer Portal.</p>

    <form action="/button" method="post">

      <p><select id="environment" onchange="buildAndShowRedirectUrl()">
        <option value="sandbox">Sandbox</option>
        <option value="production">Production</option>
      </select></p>

      <p><input type="text" id="clientId" name="clientId" value="" placeholder="Your Bot Client Id" style="width:400px" onchange="buildAndShowRedirectUrl()" /> Required</p>
      <p><input type="text" id="clientSecret" name="clientSecret" value="" placeholder="Your Bot Client Secret" style="width:400px" onchange="buildAndShowRedirectUrl()" /> Required</p>
      <p><input type="text" id="email" name="email" value="" placeholder="Email address to deliver your token" style="width:400px" onchange="buildAndShowRedirectUrl()" /> Required</p>

      <p>Your Redirect URL (be sure to verify):</p>
      <textarea id="redirectUrl" class="code"></textarea>

    </form>

    <h2>Step 2) Add Your Bot to Glip</h2>

    <p>Go to your Developer Portal and click the "Add to Glip" button under:</p>

    <p><span class="fixed">Apps</span> > <span class="fixed">$myBot</span> > <span class="fixed">Bot</span> > <span class="fixed">Sandbox / Production</span> > <span class="fixed">Add to Glip</span></p>

    <h2>Step 3) Receive an Email with your Access Token</h2>

    <p>You will receive an email with an access token which you can add to your bot.</p>

    <p>At this point, you can build your bot and add the token without needing to implement OAuth in your bot.</p>

    <h2>Next Steps</h2>

    <p>You can now use your token with <a href="https://github.com/grokify/rchooks">rchooks</a> CLI app to create and manage your webhooks to have your bot receive Glip messages.</p>

    <hr/>
    <p><a href="https://github.com/grokify/glipbot-tokenizer">https://github.com/grokify/glipbot-tokenizer</a></p>
  <script>
    buildAndShowRedirectUrl();
  </script>
  </body>
</html>
`)
//line home.qtpl:98
}

//line home.qtpl:98
func WriteHomePage(qq422016 qtio422016.Writer, data HomeData) {
	//line home.qtpl:98
	qw422016 := qt422016.AcquireWriter(qq422016)
	//line home.qtpl:98
	StreamHomePage(qw422016, data)
	//line home.qtpl:98
	qt422016.ReleaseWriter(qw422016)
//line home.qtpl:98
}

//line home.qtpl:98
func HomePage(data HomeData) string {
	//line home.qtpl:98
	qb422016 := qt422016.AcquireByteBuffer()
	//line home.qtpl:98
	WriteHomePage(qb422016, data)
	//line home.qtpl:98
	qs422016 := string(qb422016.B)
	//line home.qtpl:98
	qt422016.ReleaseByteBuffer(qb422016)
	//line home.qtpl:98
	return qs422016
//line home.qtpl:98
}
