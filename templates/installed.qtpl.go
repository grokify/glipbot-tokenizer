// This file is automatically generated by qtc from "installed.qtpl".
// See https://github.com/valyala/quicktemplate for details.

//line installed.qtpl:1
package templates

//line installed.qtpl:1
import (
	qtio422016 "io"

	qt422016 "github.com/valyala/quicktemplate"
)

//line installed.qtpl:1
var (
	_ = qtio422016.Copy
	_ = qt422016.AcquireByteBuffer
)

//line installed.qtpl:1
func StreamInstalledPage(qw422016 *qt422016.Writer, data InstalledData) {
	//line installed.qtpl:1
	qw422016.N().S(`<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Login</title>
  </head>
  <body>
    <h1>Glip bot Tokenizer</h1>

    <p>Your token. Install this into your bot</p>

    <form>

      <textarea>`)
	//line installed.qtpl:15
	qw422016.N().Z(data.TokenBytes())
	//line installed.qtpl:15
	qw422016.N().S(`</textarea>

    </form>

    <hr/>
    <a href="https://github.com/grokify/glipbot-tokenizer">https://github.com/grokify/glipbot-tokenizer</a>
  </body>
</html>
`)
//line installed.qtpl:23
}

//line installed.qtpl:23
func WriteInstalledPage(qq422016 qtio422016.Writer, data InstalledData) {
	//line installed.qtpl:23
	qw422016 := qt422016.AcquireWriter(qq422016)
	//line installed.qtpl:23
	StreamInstalledPage(qw422016, data)
	//line installed.qtpl:23
	qt422016.ReleaseWriter(qw422016)
//line installed.qtpl:23
}

//line installed.qtpl:23
func InstalledPage(data InstalledData) string {
	//line installed.qtpl:23
	qb422016 := qt422016.AcquireByteBuffer()
	//line installed.qtpl:23
	WriteInstalledPage(qb422016, data)
	//line installed.qtpl:23
	qs422016 := string(qb422016.B)
	//line installed.qtpl:23
	qt422016.ReleaseByteBuffer(qb422016)
	//line installed.qtpl:23
	return qs422016
//line installed.qtpl:23
}
